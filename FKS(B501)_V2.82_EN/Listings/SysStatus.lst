C51 COMPILER V9.57.0.0   SYSSTATUS                                                         08/04/2022 16:08:16 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE SYSSTATUS
OBJECT MODULE PLACED IN .\Objects\SysStatus.obj
COMPILER INVOKED BY: D:\keil-c51\C51\BIN\C51.EXE UserSrc\SysStatus.c LARGE OPTIMIZE(8,SPEED) BROWSE NOINTPROMOTE INCDIR(
                    -.\UserSrc;.\StcLib;.\UserSrc\ENG) DEBUG OBJECTEXTEND PRINT(.\Listings\SysStatus.lst) TABS(2) OBJECT(.\Objects\SysStatus.
                    -obj)

line level    source

   1          #include "config.h"
   2          #include "Driver.h"
   3          #include "SysStatus.h"
   4          #include "Lcd12864.h"
   5          #include "Eeprom.h"
   6          #include "NameList.h"
   7          #include "UnlockPassword.h"
   8          #include "SysString.h"
   9          #include "Card.h"
  10          #include "stdio.h"
  11          #include "Audio.h"
  12          
  13          SysStatusType SysStatus = SYS_IDLE;
  14          UsrParaType UsrPara = {0,0,0,0};
  15          SysParaType SysPara;
  16          u16 NameListIdx = 0xFFFF;
  17          u16 IdleTime = 0;
  18          uint8_t Volum = 6;
  19          
  20          NameItemType NameItemCall;
  21          u8 CallTleIdx = 0;
  22          void InitSysPara(bool rst)
  23          {
  24   1        readBuf_at24c02(SYS_PARA_ADDR, (u8 *)&SysPara,sizeof(SysPara));
  25   1        if((SysPara.InitFlag != PARA_INIT_FLAG) || rst)
  26   1        {
  27   2          SysPara.InitFlag = PARA_INIT_FLAG;
  28   2      //    SysPara.TalkTime = 30;
  29   2      //    SysPara.RingInTs = 3;
  30   2          SysPara.RingOutTs = 2;
  31   2          SysPara.ToneEn = 1;
  32   2          SysPara.CameraOn = 0;
  33   2          SysPara.RealyTime = 10;
  34   2      //    SysPara.UnlockKey = 5;
  35   2          SysPara.TalkVolum = 4;
  36   2          SysPara.SysPsw = 666666;
  37   2          writeBuf_at24c02(SYS_PARA_ADDR, (u8 *)&SysPara,sizeof(SysPara));
  38   2        }
  39   1        
  40   1      //  printf("TalkTime: %u\r\n",SysPara.TalkTime);
  41   1      //  printf("RingInTs: %bd\r\n",SysPara.RingInTs);
  42   1        printf("RingOutTs: %bd\r\n",SysPara.RingOutTs);
  43   1        printf("ToneEn: %bd\r\n",SysPara.ToneEn);
  44   1        printf("CameraOn: %bd\r\n",SysPara.CameraOn);
  45   1        printf("RealyTime: %bd\r\n",SysPara.RealyTime);
  46   1      //  printf("UnlockKey: %bd\r\n",SysPara.UnlockKey);
  47   1        printf("NameCount: %u\r\n",UsrPara.NameListCount);
  48   1        printf("PswCount: %u\r\n",UsrPara.PswCount);
  49   1        printf("CardCount: %u\r\n",UsrPara.CardCount);
  50   1        printf("TalkVolum: %bd\r\n",SysPara.TalkVolum);
  51   1      //  printf("SysPsw: %lu\r\n",SysPara.SysPsw);
  52   1        
  53   1        
C51 COMPILER V9.57.0.0   SYSSTATUS                                                         08/04/2022 16:08:16 PAGE 2   

  54   1        if(SysPara.TalkVolum > 5)
  55   1        {
  56   2          SysPara.TalkVolum = 3;
  57   2        }
  58   1        Volum = SysPara.TalkVolum;
  59   1        
  60   1        if(SysPara.CameraOn)
  61   1        {
  62   2          CAMERA_ON;
  63   2        }
  64   1        else
  65   1        {
  66   2          CAMERA_OFF;
  67   2        }
  68   1      }
  69          
  70          void InitUserPara(void)
  71          {
  72   1        readBuf_at24c02(USER_PARA_ADDR, (u8 *)&UsrPara,sizeof(UsrPara));
  73   1        if(UsrPara.InitFlag != PARA_INIT_FLAG)
  74   1        {
  75   2          UsrPara.InitFlag = PARA_INIT_FLAG;
  76   2          UsrPara.NameListCount = 0;
  77   2          UsrPara.PswCount = 0;
  78   2          UsrPara.CardCount = 0;
  79   2          writeBuf_at24c02(USER_PARA_ADDR, (u8 *)&UsrPara,sizeof(UsrPara));
  80   2        }
  81   1        InitNameList();
  82   1        InitPsw();
  83   1        InitCard();
  84   1      }
  85          
  86          u16 ReadRoomByIdx(u16 idx,EromReadType type)
  87          {
  88   1        u16 room;
  89   1        u16 addr = (u16)idx;
  90   1        switch(type)
  91   1        {
  92   2          case NAME_LIST:
  93   2            addr *= sizeof(NameItemType);
  94   2            addr += NAMELIST_ADDR;
  95   2            break;
  96   2          case UNLOCK_PSW:
  97   2            addr *= sizeof(PswItemType);
  98   2            addr += USER_PSW_ADDR;
  99   2            break;
 100   2          case CARD_LIST:
 101   2            addr *= sizeof(CardItemType);
 102   2            addr += USER_CARD_ADDR;
 103   2            break;
 104   2        }
 105   1        
 106   1        
 107   1        readBuf_at24c02(addr, (u8 *)&room,sizeof(room));
 108   1        return room;
 109   1      }
 110          
 111          u16 GetIdxByRoom(u16 room,EromReadType type)
 112          {
 113   1        u16 i =0;
 114   1        u16 DstRoom;
 115   1        u16 iMax;
C51 COMPILER V9.57.0.0   SYSSTATUS                                                         08/04/2022 16:08:16 PAGE 3   

 116   1        switch(type)
 117   1        {
 118   2          case NAME_LIST:
 119   2            iMax = UsrPara.NameListCount;
 120   2            break;
 121   2          case UNLOCK_PSW:
 122   2            iMax = UsrPara.PswCount;
 123   2            break;
 124   2          case CARD_LIST:
 125   2            iMax = UsrPara.CardCount;
 126   2            break;
 127   2        }
 128   1        while(i<iMax)
 129   1        {
 130   2          DstRoom = ReadRoomByIdx(i,type);
 131   2          if(room == DstRoom)
 132   2          {
 133   3            return i;
 134   3          }
 135   2          else if(DstRoom == 0xFFFF)
 136   2          {
 137   3            break;
 138   3          }
 139   2          i++;
 140   2        }
 141   1        return 0xFFFF;
 142   1      }
 143          
 144          u16 InputRoom = 0;
 145          u8 InputIdx = 0;
 146          
 147          void SysIdleCon(void)
 148          {
 149   1        SysStatus = SYS_IDLE;
 150   1        NameListIdx = 0xFFFF;
 151   1        IdleTime = 0;
 152   1        ShowMain(true);
 153   1      }
 154          void SysSettingCon(void)
 155          {
 156   1        SysStatus = SYS_SETTING;
 157   1        LcdClear();
 158   1        DisplayString(1,1,StrTabSysSet);
 159   1        DisplayString(3,1,StrTabSysSet1);
 160   1      
 161   1        DisplayIco(3,6,3);
 162   1        InputRoom = 0;
 163   1        InputIdx = 0;
 164   1      }
 165          
 166          void ShowInputRoom(void)
 167          {
 168   1        u8 Disbuf[24];
 169   1        LcdClear();
 170   1      
 171   1        DisplayString(1,0,StrTabRoom);
 172   1        #ifdef LANGUAGE_HB  
                if(InputRoom > 0)
                {
                  sprintf(Disbuf,"%u",InputRoom);
                  DisplayString(1,(15-HBstrlen(StrTabRoom)-strlen(Disbuf)),Disbuf);
                }
C51 COMPILER V9.57.0.0   SYSSTATUS                                                         08/04/2022 16:08:16 PAGE 4   

                #else
 179   1        if(InputRoom > 0)
 180   1        {
 181   2          sprintf(Disbuf,"%s%u",StrTabRoom,InputRoom);
 182   2        }
 183   1        else
 184   1        {
 185   2          sprintf(Disbuf,"%s",StrTabRoom);
 186   2        }
 187   1          DisplayString(1,0,Disbuf);
 188   1        #endif  
 189   1      
 190   1      }
 191          
 192          void InputRoomCon(u8 key)
 193          {
 194   1        SysStatus = SYS_INPUT_ROOM;
 195   1        InputRoom = key;
 196   1        InputIdx = 1;
 197   1        if(InputRoom == 0)
 198   1        {
 199   2          InputIdx = 0;
 200   2        }
 201   1        ShowInputRoom();
 202   1        ClearBuf((u8 *)&NameItemCall,sizeof(NameItemCall));
 203   1        MP3_StartPlay(MP3_InputRoom);
 204   1      }
 205          
 206          void SysInputRoom(u8 key)
 207          {
 208   1        switch(key)
 209   1        {
 210   2          case KEY_BELL:
 211   2            if(InputRoom > 0)
 212   2            {
 213   3              if(GetNameItemByRoom(InputRoom,&NameItemCall) != 0xFFFF)
 214   3              {
 215   4                CallTleIdx = 0;
 216   4                if(CallByNameItem(&NameItemCall))
 217   4                {
 218   5                  SysStatus = SYS_CALL;
 219   5                  MP3_StartPlay(MP3_Calling);
 220   5                  CallOutTime = SysPara.RingOutTs;
 221   5                }
 222   4                else// if(NameItemCall.Tel == 0)
 223   4                {
 224   5                  ShowErr();
 225   5                  IdleTime = 3;
 226   5                }
 227   4      //          else
 228   4      //          {
 229   4      //            ShowGsmErr();
 230   4      //            IdleTime = 3;
 231   4      //          }
 232   4                return;
 233   4              }
 234   3            }
 235   2            
 236   2            ShowRoomErr();
 237   2            MP3_StartPlay(MP3_RoomErr);
 238   2            IdleTime = 3;
 239   2            InputRoom = 0;
C51 COMPILER V9.57.0.0   SYSSTATUS                                                         08/04/2022 16:08:16 PAGE 5   

 240   2            InputIdx = 0;
 241   2            break;
 242   2          case KEY_DEL:
 243   2            if(InputIdx > 0)
 244   2            {
 245   3              InputIdx--;
 246   3              InputRoom /= 10;
 247   3              ShowInputRoom();
 248   3            }
 249   2            else
 250   2            {
 251   3            #ifdef PWM_AUDIO
 252   3              MP3_Stop();
 253   3            #endif
 254   3              SysIdleCon();
 255   3            }
 256   2            break;
 257   2        }
 258   1        if((key >= 0) && (key <= 9))
 259   1        {
 260   2          if(InputIdx < 4)
 261   2          {
 262   3            InputIdx++;
 263   3            InputRoom *= 10;
 264   3            InputRoom += key;
 265   3            if(InputRoom == 0)
 266   3            {
 267   4              InputIdx = 0;
 268   4            }
 269   3            ShowInputRoom();
 270   3          }
 271   2        }
 272   1      }
 273          
 274          u32 InputPsw = 0;
 275          void ShowInputPsw(void)
 276          {
 277   1        u8 Disbuf[30],i;
 278   1        LcdClear();
 279   1        if(SysStatus == SYS_INPUT_SYSPSW)
 280   1        {
 281   2          DisplayString(1,0,StrTabSysPsw);
 282   2        }
 283   1      //  if(InputPsw > 0)
 284   1      //  {
 285   1      //    sprintf(Disbuf," %s%lu",StrTabPsw1,InputPsw);
 286   1      //  }
 287   1      //  else
 288   1      //  {
 289   1      //    sprintf(Disbuf," %s",StrTabPsw1);
 290   1      //  }
 291   1        
 292   1        sprintf(Disbuf,"%s%",StrTabPsw1);
 293   1        for(i=0;i<InputIdx;i++)
 294   1        {
 295   2          Disbuf[strlen(StrTabPsw1)+i] = '*';
 296   2        }
 297   1        Disbuf[strlen(StrTabPsw1)+i] = 0;
 298   1            
 299   1        DisplayString(2,0,Disbuf);
 300   1        #ifdef LANGUAGE_HB  
                  SetFlash(2,(9-InputIdx));
C51 COMPILER V9.57.0.0   SYSSTATUS                                                         08/04/2022 16:08:16 PAGE 6   

                #else
 303   1          SetFlash(2,strlen(Disbuf));
 304   1        #endif
 305   1      }
 306          void InputSysPswCon(void)
 307          {
 308   1        SysStatus = SYS_INPUT_SYSPSW;
 309   1        InputPsw = 0;
 310   1        InputIdx = 0;
 311   1        ShowInputPsw();
 312   1        MP3_StartPlay(MP3_InputPsw);
 313   1      }
 314          
 315          void InputSysPsw(u8 key)
 316          {
 317   1        switch(key)
 318   1        {
 319   2          case KEY_SURE:
 320   2            if((InputPsw > 0) && (InputIdx == 6))
 321   2            {
 322   3              if(InputPsw == SysPara.SysPsw)
 323   3              {
 324   4                SysSettingCon();
 325   4                return;
 326   4              }
 327   3            }
 328   2            
 329   2            ShowErr();
 330   2            MP3_StartPlay(MP3_PwdErr);
 331   2            InputPsw = 0;
 332   2            InputIdx = 0;
 333   2            break;
 334   2          case KEY_DEL:
 335   2            if(InputIdx > 0)
 336   2            {
 337   3              InputIdx--;
 338   3              InputPsw /= 10;
 339   3              ShowInputPsw();
 340   3            }
 341   2            else
 342   2            {
 343   3              
 344   3      #ifdef PWM_AUDIO
 345   3              MP3_Stop();
 346   3      #endif
 347   3              SysIdleCon();
 348   3            }
 349   2            break;
 350   2          case KEY_BELL:
 351   2      #ifdef PWM_AUDIO
 352   2              MP3_Stop();
 353   2      #endif
 354   2            SysIdleCon();
 355   2            break;
 356   2        }
 357   1        if((key >= 0) && (key <= 9))
 358   1        {
 359   2          if(InputIdx < 6)
 360   2          {
 361   3            InputIdx++;
 362   3            InputPsw *= 10;
 363   3            InputPsw += key;
C51 COMPILER V9.57.0.0   SYSSTATUS                                                         08/04/2022 16:08:16 PAGE 7   

 364   3            ShowInputPsw();
 365   3          }
 366   2        }
 367   1      }
 368          
 369          void SysIdleKey(u8 key)
 370          {
 371   1        switch(key)
 372   1        {
 373   2          case KEY_DEL:
 374   2      //      if(NameListIdx == 0xFFFF)
 375   2      //      {
 376   2      //        InputSysPswCon();
 377   2      //      }
 378   2      //      else
 379   2            {
 380   3              SysIdleCon();
 381   3            }
 382   2            break;
 383   2          case KEY_SURE:
 384   2            InputPswCon();
 385   2            break;
 386   2          case KEY_ADMIN:
 387   2            InputSysPswCon();
 388   2            break;
 389   2          case KEY_UP:
 390   2            if(UsrPara.NameListCount > 0)
 391   2            {
 392   3              if(NameListIdx < (UsrPara.NameListCount-1))
 393   3              {
 394   4                NameListIdx++;
 395   4              }
 396   3              else
 397   3              {
 398   4                NameListIdx = 0;
 399   4              }
 400   3              ShowNameByIdx(NameListIdx);
 401   3            }
 402   2            break;
 403   2          case KEY_DOWN:
 404   2            if(UsrPara.NameListCount > 0)
 405   2            {
 406   3              if(NameListIdx < UsrPara.NameListCount)
 407   3              {
 408   4                if(NameListIdx > 0)
 409   4                {
 410   5                  NameListIdx--;
 411   5                }
 412   4                else
 413   4                {
 414   5                  NameListIdx = UsrPara.NameListCount-1;
 415   5                }
 416   4              }
 417   3              else
 418   3              {
 419   4                NameListIdx = UsrPara.NameListCount-1;
 420   4              }
 421   3              ShowNameByIdx(NameListIdx);
 422   3            }
 423   2            break;
 424   2          case KEY_BELL:
 425   2            if(NameListIdx < UsrPara.NameListCount)
C51 COMPILER V9.57.0.0   SYSSTATUS                                                         08/04/2022 16:08:16 PAGE 8   

 426   2            {
 427   3              CallTleIdx = 0;
 428   3              ReadNameItemByIdx(NameListIdx,&NameItemCall);
 429   3              if(CallByNameItem(&NameItemCall))
 430   3              {
 431   4                SysStatus = SYS_CALL;
 432   4                MP3_StartPlay(MP3_Calling);
 433   4                CallOutTime = SysPara.RingOutTs;
 434   4              }
 435   3              else
 436   3              {
 437   4                ShowErr();
 438   4                IdleTime = 3;
 439   4              }
 440   3      //        else
 441   3      //        {
 442   3      //          ShowGsmErr();
 443   3      //          IdleTime = 3;
 444   3      //        }
 445   3            }
 446   2            else
 447   2            {
 448   3              InputRoomCon(0);
 449   3            }
 450   2            break;
 451   2        }
 452   1        if((key > 0) && (key <= 9))
 453   1        {
 454   2          InputRoomCon(key);
 455   2        }
 456   1      }
 457          
 458          void SysSettingKey(u8 key)
 459          {
 460   1      //  if((key >= 0) && (key <= 9))
 461   1      //  {
 462   1      //    InputRoom = key;
 463   1      //  }
 464   1      //  else if(key == KEY_BELL)
 465   1      //  {
 466   1      //    SysIdleCon();
 467   1      //  }
 468   1      //  else if(key == KEY_DEL)
 469   1      //  {
 470   1      //    SysIdleCon();
 471   1      //  }
 472   1      //  else if(key == KEY_SURE)
 473   1      //  {
 474   1      //    switch(InputRoom)
 475   1      //    {
 476   1      //      case 11:
 477   1      //        EditSysPswCon();
 478   1      //        break;
 479   1      //      case 1:
 480   1      //        NameSetCon();
 481   1      //        break;
 482   1      //      case 2:
 483   1      //        PswSetCon();
 484   1      //        break;
 485   1      //      case 3:
 486   1      //        CardSetCon();
 487   1      //        break;
C51 COMPILER V9.57.0.0   SYSSTATUS                                                         08/04/2022 16:08:16 PAGE 9   

 488   1      //      case 4:
 489   1      //      case 5:
 490   1      //      case 6:
 491   1      //      case 7:
 492   1      ////      case 8:
 493   1      ////      case 9:
 494   1      ////      case 10:
 495   1      //        SubSetCon(SYS_SET_TALKTIME+InputRoom-4);
 496   1      //        break;
 497   1      //    }
 498   1      //  }
 499   1      /*
 500   1        switch(key)
 501   1        {
 502   1          case KEY_DEL:
 503   1          case KEY_BELL:
 504   1            SysIdleCon();
 505   1            break;
 506   1          case 8:
 507   1            EditSysPswCon();
 508   1            break;
 509   1          case 1:
 510   1            NameSetCon();
 511   1            break;
 512   1          case 2:
 513   1            PswSetCon();
 514   1            break;
 515   1          case 3:
 516   1            CardSetCon();
 517   1            break;
 518   1          case 4:
 519   1          case 5:
 520   1          case 6:
 521   1          case 7:
 522   1      //    case 8:
 523   1      //    case 9:
 524   1            SubSetCon(SYS_SET_TONE+key-4);
 525   1            break;
 526   1        }
 527   1      */
 528   1        if((key >= 0) && (key <= 9))
 529   1        {
 530   2          if(InputIdx < 2)
 531   2          {
 532   3            InputIdx++;
 533   3            InputRoom *= 10;
 534   3            InputRoom += key;
 535   3            if(InputRoom > 13)
 536   3            {
 537   4              InputRoom = key;
 538   4              InputIdx = 1;
 539   4            }
 540   3          }
 541   2          else
 542   2          {
 543   3            InputRoom = key;
 544   3            InputIdx = 1;
 545   3          }
 546   2        }
 547   1        else if(key == KEY_BELL)
 548   1        {
 549   2          SysIdleCon();
C51 COMPILER V9.57.0.0   SYSSTATUS                                                         08/04/2022 16:08:16 PAGE 10  

 550   2        }
 551   1        else if(key == KEY_DEL)
 552   1        {
 553   2          SysIdleCon();
 554   2        }
 555   1        else if(key == KEY_SURE)
 556   1        {
 557   2          if((InputRoom >= 4) && (InputRoom<12))
 558   2          {
 559   3            SubSetCon(SYS_SET_TALKTIME+InputRoom-4);
 560   3            return;
 561   3          }
 562   2          switch(InputRoom)
 563   2          {
 564   3            case 12:
 565   3              EditSysPswCon();
 566   3              break;
 567   3            case 1:
 568   3              NameSetCon();
 569   3              break;
 570   3            case 2:
 571   3              PswSetCon();
 572   3              break;
 573   3            case 3:
 574   3              CardSetCon();
 575   3              break;
 576   3            case 13:
 577   3              SubSetCon(SYS_SET_TALKVOLUM);
 578   3              break;
 579   3          /*  case 4:
 580   3            case 5:
 581   3            case 6:
 582   3            case 7:
 583   3            case 8:
 584   3            case 9:
 585   3            case 10:
 586   3            case 11:
 587   3              SubSetCon(SYS_SET_TALKTIME+InputRoom-4);
 588   3              break;*/
 589   3          }
 590   2        }
 591   1      }
 592          
 593          void SysTalkKey(u8 key)
 594          {
 595   1        switch(key)
 596   1        {
 597   2          case KEY_DEL:
 598   2            RelayCloaseAll();
 599   2            SysIdleCon();
 600   2            break;
 601   2        }
 602   1      }
 603          
 604          u8 InputLen = 4;
 605          u16 InputMax = 300;
 606          void ShowSubPara(void)
 607          {
 608   1        u8 Disbuf[24];
 609   1        LcdClear();
 610   1        switch(SysStatus)
 611   1        {
C51 COMPILER V9.57.0.0   SYSSTATUS                                                         08/04/2022 16:08:16 PAGE 11  

 612   2      //    case SYS_SET_TALKTIME:
 613   2      //      sprintf(Disbuf,"%s",StrTabTalkTime);
 614   2      //      break;
 615   2      //    case SYS_SET_RINGIN:
 616   2      //      sprintf(Disbuf,"%s",StrTabRingTime);
 617   2      //      break;
 618   2          case SYS_SET_RINGOUT:
 619   2            sprintf(Disbuf,"%s",StrTabRingTime);
 620   2            break;
 621   2          case SYS_SET_TONE:
 622   2            sprintf(Disbuf,"%s",StrTabTone);
 623   2            break;
 624   2          case SYS_SET_CAMERA:
 625   2            sprintf(Disbuf,"%s",StrTabCamrea);
 626   2            if(InputRoom != 0)
 627   2            {
 628   3              CAMERA_ON;
 629   3            }
 630   2            else
 631   2            {
 632   3              CAMERA_OFF;
 633   3            }
 634   2            break;
 635   2          case SYS_SET_RELAY:
 636   2            sprintf(Disbuf,"%s",StrTabRelay);
 637   2            break;
 638   2      //    case SYS_SET_UNLOCKKEY:
 639   2      //      sprintf(Disbuf,"%s",StrTabUnlockKey);
 640   2      //      break;
 641   2          case SYS_SET_TALKVOLUM:
 642   2            sprintf(Disbuf,"%s",StrTabTalkValum);
 643   2            break;
 644   2        }
 645   1        if(SysStatus == SYS_SET_TONE)
 646   1      //  if(SysStatus == SYS_SET_CAMERA)
 647   1        {
 648   2          //sprintf(Disbuf,"%s%s",Disbuf,((InputRoom==0)?StrTabOff:StrTabOn));
 649   2          DisplayString(1,0,Disbuf);
 650   2          DisplayString(3,6,((InputRoom==1)?StrTabOn:StrTabOff));
 651   2          return;
 652   2        }
 653   1        else if(SysStatus == SYS_SET_CAMERA)
 654   1        {
 655   2          //sprintf(Disbuf,"%s%s",Disbuf,((InputRoom==0)?StrTabOff:StrTabOn));
 656   2          DisplayString(1,0,Disbuf);
 657   2          DisplayString(2,6,((InputRoom==1)?StrTabOn:StrTabOff));
 658   2          return;
 659   2        }
 660   1      //  else if(InputRoom > 0)
 661   1      //  {
 662   1      //    sprintf(Disbuf,"%s%u",Disbuf,InputRoom);
 663   1      //  }
 664   1        
 665   1        DisplayString(1,0,Disbuf);
 666   1        if((InputRoom > 0) && (SysStatus != SYS_SET_CAMERA))
 667   1        {
 668   2          sprintf(Disbuf,"%u",InputRoom);
 669   2          DisplayString(2,8,Disbuf);
 670   2        //  SetFlash(2,8+strlen(Disbuf));
 671   2        }
 672   1      }
 673            
C51 COMPILER V9.57.0.0   SYSSTATUS                                                         08/04/2022 16:08:16 PAGE 12  

 674          void SubSetCon(SysStatusType type)
 675          {
 676   1        u16 tmp;
 677   1        
 678   1        switch(type)
 679   1        {
 680   2      //    case SYS_SET_TALKTIME:
 681   2      //      InputLen = 3;
 682   2      //      InputMax = 300;
 683   2      //      InputRoom = SysPara.TalkTime;
 684   2      //      break;
 685   2      //    case SYS_SET_RINGIN:
 686   2      //      InputLen = 2;
 687   2      //      InputMax = 15;
 688   2      //      InputRoom = SysPara.RingInTs;
 689   2      //      break;
 690   2          case SYS_SET_RINGOUT:
 691   2            InputLen = 2;
 692   2            InputMax = 90;
 693   2            InputRoom = SysPara.RingOutTs;
 694   2            break;
 695   2          case SYS_SET_TONE:
 696   2            InputLen = 1;
 697   2            InputMax = 1;
 698   2            InputRoom = SysPara.ToneEn;
 699   2            break;
 700   2          case SYS_SET_CAMERA:
 701   2            InputLen = 1;
 702   2            InputMax = 1;
 703   2            InputRoom = SysPara.CameraOn;
 704   2            break;
 705   2          case SYS_SET_RELAY:
 706   2            InputLen = 2;
 707   2            InputMax = 99;
 708   2            InputRoom = SysPara.RealyTime;
 709   2            break;
 710   2      //    case SYS_SET_UNLOCKKEY:
 711   2      //      InputLen = 1;
 712   2      //      InputMax = 9;
 713   2      //      InputRoom = SysPara.UnlockKey;
 714   2      //      break;
 715   2          case SYS_SET_TALKVOLUM:
 716   2            InputLen = 1;
 717   2            InputMax = 5;
 718   2            InputRoom = SysPara.TalkVolum;
 719   2            break;
 720   2          default:
 721   2            return;
 722   2        }
 723   1        
 724   1        SysStatus = type;
 725   1        InputIdx = 0;
 726   1        tmp =InputRoom;
 727   1        while(tmp > 0)
 728   1        {
 729   2          InputIdx++;
 730   2          tmp /= 10;
 731   2        }
 732   1      //  if((SysStatus == SYS_SET_TONE) || (SysStatus == SYS_SET_CAMERA) || (SysStatus == SYS_SET_UNLOCKKEY))
 733   1        if((SysStatus == SYS_SET_TONE) || (SysStatus == SYS_SET_CAMERA) || (SysStatus == SYS_SET_TALKVOLUM))
 734   1        {
 735   2          InputIdx = 1;
C51 COMPILER V9.57.0.0   SYSSTATUS                                                         08/04/2022 16:08:16 PAGE 13  

 736   2        }
 737   1        ShowSubPara();
 738   1      }
 739          
 740          void SaveSubPara(SysStatusType type,u16 dat)
 741          {
 742   1        switch(type)
 743   1        {
 744   2      //    case SYS_SET_TALKTIME:
 745   2      //      SysPara.TalkTime = dat;
 746   2      //      writeBuf_at24c02(SYS_PARA_ADDR+((u16)((u32)(&SysPara.TalkTime)-(u32)(&SysPara))), (u8 *)&SysPara.Talk
             -Time,sizeof(SysPara.TalkTime));
 747   2      //      break;
 748   2      //    case SYS_SET_RINGIN:
 749   2      //      SysPara.RingInTs = (u8)dat;
 750   2      //      writeBuf_at24c02(SYS_PARA_ADDR+((u16)((u32)(&SysPara.RingInTs)-(u32)(&SysPara))), (u8 *)&SysPara.Ring
             -InTs,sizeof(SysPara.RingInTs));
 751   2      //      break;
 752   2          case SYS_SET_RINGOUT:
 753   2            SysPara.RingOutTs = (u8)dat;
 754   2            writeBuf_at24c02(SYS_PARA_ADDR+((u16)((u32)(&SysPara.RingOutTs)-(u32)(&SysPara))), (u8 *)&SysPara.RingO
             -utTs,sizeof(SysPara.RingOutTs));
 755   2            break;
 756   2          case SYS_SET_TONE:
 757   2            SysPara.ToneEn = ((dat==0)?0:1);
 758   2            writeBuf_at24c02(SYS_PARA_ADDR+((u16)((u32)(&SysPara.ToneEn)-(u32)(&SysPara))), (u8 *)&SysPara.ToneEn,s
             -izeof(SysPara.ToneEn));
 759   2            break;
 760   2          case SYS_SET_CAMERA:
 761   2            SysPara.CameraOn = ((dat==0)?0:1);
 762   2            writeBuf_at24c02(SYS_PARA_ADDR+((u16)((u32)(&SysPara.CameraOn)-(u32)(&SysPara))), (u8 *)&SysPara.Camera
             -On,sizeof(SysPara.CameraOn));
 763   2            break;
 764   2          case SYS_SET_RELAY:
 765   2            SysPara.RealyTime = (u8)dat;
 766   2            writeBuf_at24c02(SYS_PARA_ADDR+((u16)((u32)(&SysPara.RealyTime)-(u32)(&SysPara))), (u8 *)&SysPara.Realy
             -Time,sizeof(SysPara.RealyTime));
 767   2            break;
 768   2      //    case SYS_SET_UNLOCKKEY:
 769   2      //      SysPara.UnlockKey = (u8)dat;
 770   2      //      writeBuf_at24c02(SYS_PARA_ADDR+((u16)((u32)(&SysPara.UnlockKey)-(u32)(&SysPara))), (u8 *)&SysPara.Unl
             -ockKey,sizeof(SysPara.UnlockKey));
 771   2      //      break;
 772   2          case SYS_SET_TALKVOLUM:
 773   2            if(dat > 0)
 774   2            {
 775   3              SysPara.TalkVolum = (uint8_t)dat;
 776   3              writeBuf_at24c02(SYS_PARA_ADDR+((u16)((u32)(&SysPara.TalkVolum)-(u32)(&SysPara))), (u8 *)&SysPara.Talk
             -Volum,sizeof(SysPara.TalkVolum));
 777   3              Volum = SysPara.TalkVolum;
 778   3            }
 779   2            break;
 780   2        }
 781   1        ShowSaveOK();
 782   1      }
 783          
 784          void SysSubSetKey(u8 key)
 785          {
 786   1        if(InputIdx == 99)
 787   1        {
 788   2          SysSettingCon();
 789   2          return;
C51 COMPILER V9.57.0.0   SYSSTATUS                                                         08/04/2022 16:08:16 PAGE 14  

 790   2        }
 791   1        switch(key)
 792   1        {
 793   2          case KEY_DEL:
 794   2            if((SysStatus == SYS_SET_TONE) || (SysStatus == SYS_SET_CAMERA) || (InputIdx == 0))
 795   2      //      if((SysStatus == SYS_SET_CAMERA) || (InputIdx == 0))
 796   2            {
 797   3              if(SysPara.CameraOn)
 798   3              {
 799   4                CAMERA_ON;
 800   4              }
 801   3              else
 802   3              {
 803   4                CAMERA_OFF;
 804   4              }
 805   3              SysSettingCon();
 806   3              return;
 807   3            }
 808   2            
 809   2            InputIdx--;
 810   2            InputRoom /= 10;
 811   2            ShowSubPara();
 812   2            break;
 813   2          case KEY_BELL:
 814   2            SysSettingCon();
 815   2            return;
 816   2          case KEY_SURE:
 817   2            if(InputIdx > 0)
 818   2            {
 819   3              SaveSubPara(SysStatus,InputRoom);
 820   3              InputIdx = 99;
 821   3            }
 822   2            else
 823   2            {
 824   3              SysSettingCon();
 825   3            }
 826   2            return;
 827   2        }
 828   1        if((key >= 0) && (key <= 9))
 829   1        {
 830   2          //if((SysStatus == SYS_SET_TONE) || (SysStatus == SYS_SET_CAMERA)|| (SysStatus == SYS_SET_UNLOCKKEY))
 831   2          if((SysStatus == SYS_SET_TONE) || (SysStatus == SYS_SET_CAMERA))
 832   2          {
 833   3            InputIdx = 1;
 834   3            InputRoom = key;
 835   3          }
 836   2          else if(SysStatus == SYS_SET_TALKVOLUM)
 837   2          {
 838   3            if((key > 0) && (key <= InputMax))
 839   3            {
 840   4              InputIdx = 1;
 841   4              InputRoom = key;
 842   4            }
 843   3          }
 844   2          else if((InputIdx < InputLen) && (InputMax >= (InputRoom*10)))
 845   2          {
 846   3            InputIdx++;
 847   3            InputRoom *= 10;
 848   3            if(InputMax >= (InputRoom + key))
 849   3            {
 850   4              InputRoom += key;
 851   4            }
C51 COMPILER V9.57.0.0   SYSSTATUS                                                         08/04/2022 16:08:16 PAGE 15  

 852   3            else
 853   3            {
 854   4              InputRoom = InputMax;
 855   4            }
 856   3          }
 857   2        }
 858   1        ShowSubPara();
 859   1      }
 860          
 861          void SysKey(u8 Key)
 862          {
 863   1        IdleTime = 30;
 864   1        switch(SysStatus)
 865   1        {
 866   2          case SYS_IDLE:
 867   2            SysIdleKey(Key);
 868   2            break;
 869   2          case SYS_SETTING:
 870   2            SysSettingKey(Key);
 871   2            break;
 872   2          case SYS_SET_NAME:
 873   2            NameSetKey(Key);
 874   2            break;
 875   2          case SYS_EDIT_NAME:
 876   2            NameEditKey(Key);
 877   2            break;
 878   2          case SYS_DEL_NAME:
 879   2            NameDeleteKey(Key);
 880   2            break;
 881   2          case SYS_DEL_ALLNAME:
 882   2            NameDelAllKey(Key);
 883   2            break;
 884   2          case SYS_SET_PSW:
 885   2            PswSetKey(Key);
 886   2            break;
 887   2          case SYS_EDIT_PSW:
 888   2            PswEditKey(Key);
 889   2            break;
 890   2          case SYS_DEL_PSW:
 891   2            PswDeleteKey(Key);
 892   2            break;
 893   2          case SYS_DEL_ALLPSW:
 894   2            PswDelAllKey(Key);
 895   2            break;
 896   2          case SYS_INPUT_PSW:
 897   2            PswInputKey(Key);
 898   2            break;
 899   2          case SYS_INPUT_ROOM:
 900   2            SysInputRoom(Key);
 901   2            break;
 902   2          case SYS_INPUT_SYSPSW:
 903   2            InputSysPsw(Key);
 904   2            break;
 905   2          case SYS_EDIT_SYSPSW:
 906   2            SysPswEditKey(Key);
 907   2            break;
 908   2          case SYS_CALL:
 909   2          case SYS_TALK:
 910   2            SysTalkKey(Key);
 911   2            break;
 912   2      //    case SYS_SET_TALKTIME:
 913   2      //    case SYS_SET_RINGIN:
C51 COMPILER V9.57.0.0   SYSSTATUS                                                         08/04/2022 16:08:16 PAGE 16  

 914   2          case SYS_SET_RINGOUT:
 915   2          case SYS_SET_TONE:
 916   2          case SYS_SET_CAMERA:
 917   2          case SYS_SET_RELAY:
 918   2      //    case SYS_SET_UNLOCKKEY:
 919   2          case SYS_SET_TALKVOLUM:
 920   2            SysSubSetKey(Key);
 921   2            break;
 922   2          case SYS_SET_CARD:
 923   2            CardSetKey(Key);
 924   2            break;
 925   2          case SYS_EDIT_CARD:
 926   2            CardEditKey(Key);
 927   2            break;
 928   2          case SYS_DEL_CARD:
 929   2            CardDeleteKey(Key);
 930   2            break;
 931   2          case SYS_DEL_ALLCARD:
 932   2            CardDelAllKey(Key);
 933   2            break;
 934   2        }
 935   1        if((IdleTime > 10) && ((SysStatus == SYS_INPUT_SYSPSW) || (SysStatus == SYS_INPUT_PSW) || (SysStatus == S
             -YS_INPUT_ROOM) || (SysStatus == SYS_IDLE)))
 936   1        {
 937   2          IdleTime = 10;
 938   2        }
 939   1      }
 940          
 941          void SysCard(u8 * card)
 942          {
 943   1        switch(SysStatus)
 944   1        {
 945   2          case SYS_EDIT_CARD:
 946   2          case SYS_DEL_CARD:
 947   2            CardEditCardIn(card);
 948   2            break;
 949   2          case SYS_DEL_ALLCARD:
 950   2          case SYS_SET_CARD:
 951   2            break;
 952   2          case SYS_IDLE:
 953   2          default:
 954   2            if(CheckCard(card) != 0xFFFF)
 955   2            {
 956   3              Unlock(true);
 957   3            }
 958   2            else
 959   2            {
 960   3              ShowCardErr();
 961   3            }
 962   2            if((SysStatus != SYS_TALK) && (SysStatus != SYS_CALL))
 963   2            {
 964   3              IdleTime = 3;
 965   3            }
 966   2            break;
 967   2          
 968   2        }
 969   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   3735    ----
   CONSTANT SIZE    =    143    ----
C51 COMPILER V9.57.0.0   SYSSTATUS                                                         08/04/2022 16:08:16 PAGE 17  

   XDATA SIZE       =     84      99
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
